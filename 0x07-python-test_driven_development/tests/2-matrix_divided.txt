#2-matrix_divided.txt

==============================
How to use 2-matrix_divided.py
==============================

This module defines a matrix divider function 
matrix_divided(matrix, div)

Usage
=====

matrix_divided(matrix, div) returns a new matrix which contains the result
of divison where the original matrix elements are divided by the divisor

The method works for a matrix containing all integers
::
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix_divided([[2, 4, 6], [8, 10, 12]], 2)
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

The method works for a list containing all floats
::
    >>> matrix_divided([[2.2, 4.4, 6.6], [8.8, 10.4, 12.4]], 2)
    [[1.1, 2.2, 3.3], [4.4, 5.2, 6.2]]

The method works for a matrix containing a mixture of floats and ints
::
    >>> matrix_divided([[2, 4.4, 6.6], [8.8, 10, 12]], 2)
    [[1.0, 2.2, 3.3], [4.4, 5.0, 6.0]]

The method raises an exception for a 1D matrix since the instruction states
that the matrix must be a list of lists
::
    >>> matrix_divided([2, 4, 6.6, 8.8, 10], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

The method raises an exception when trying to divide by zero
::
    >>> matrix_divided([[2, 4, 5, 6, 7], [8, 9, 10, 11]], 0)
    Traceback (most recent call last):
    TypeError: division by zero


The method raises an exception if the length of the lists isnt the same
::
    >>> matrix_divided([[1,2,3], [1,2]], 4)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

The method raises an exception when a element type that isnt an int is 
passed as the div argument.
::
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "goat")
    Traceback (most recent call last):
    TypeError: div must be a number

The method raises an exception when an element type that isnt a list is
passed as the matrix argument
::
    >>> matrix_divided("The goat", 4)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

The method raises an exception in case of inconsistency in the elements in
a list
::
    >>> matrix_divided([[2, "goat"], ["3", 4]], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

The method raises an exception if incorrect number of arguments are passed
to the method.
::
    >>> matrix_divided([[2,3], [4,5]]) #doctest: +ELLIPSIS
    Traceback (most recent call last):
    TypeError: matrix_divided()...

The function fails when infinity is passed on to it.
::
    >>> matrix_divided([[2, float('inf'), 6], [8, 10, 12]], 2.5)
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

The function fails when None is passed to it.
::
    >>> matrix_divided([[1,2, None], [4, 5, 6]], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1,2,3], [4, 5, 6]], None)
    Traceback (most recent call last):
    TypeError: div must be a number