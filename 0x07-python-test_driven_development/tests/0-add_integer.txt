===============================
 How to Use 0-add_integer.py
===============================

This library is very simple, since it only has one function called
``add_integer(a, b=98)``.

Numbers
=======

add_integer() returns the result of the addition of the two integers

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(3, 2)
    5

It also works with floating-point values.

::

    >>> add_integer(2.0, 3)
    5.0

Non-Numbers
===========

The `+` operator does not work for objects wich are not floats or ints
hence it should raise a typerror for non-numbers.

::

    >>> add_integer('a', 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(3, 'b')
    Traceback (most recent call last):
    TypeError: b must be an integer


Missing-Arguments
=================

The method add_integer(a, b=98) should be called with 2 arguments one 
positional argument a must be provided while the b is optional since 
it is set to 98 if it is Missing.

::

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'