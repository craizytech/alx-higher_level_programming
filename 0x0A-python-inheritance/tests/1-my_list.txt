#1-my_list.txt

=======================
How to use 1-my_list.py
=======================

Usage
=====
this module defines a class, MyList that inherits from the list class and
it contains a method print_sorted which prints the list sorted and returns
a sorted list while maintaining the original list this is just to demostrate
how inheritance works in programming

Tests
=====

Lets import the class
::
    >>> MyList = __import__('1-my_list').MyList

When we initialize the class without a parameter an empty list is created
::
    >>> my_list = MyList()
    >>> my_list
    []
    >>> type(my_list)
    <class '1-my_list.MyList'>

When we can create an instance of the class with a list as argument
::
    >>> my_list = MyList([1, 2, 3, 4])
    >>> my_list
    [1, 2, 3, 4]
    >>> my_list = MyList([1, -2, 3, -4])
    >>> my_list
    [1, -2, 3, -4]

when an instance of the class is created we can append a value into a list
since append is a method in the superclass it is inherited by MyList.
::
    >>> my_list = MyList()
    >>> my_list
    []
    >>> my_list.append(5)
    >>> my_list.append(-6)
    >>> my_list
    [5, -6]

With inheritance the child class inherits from the parent class, MyList class
also inherits the __str__ method from the list class
::
    >>> my_list = MyList([1, 2, 3])
    >>> print(my_list)
    [1, 2, 3]

The MyList class contains print_sorted method that returns a prints a sorted
version of the list and returns the a new sorted list without changing the
original
::
    >>> my_list = MyList([1, 4, 3, 2])
    >>> my_list.print_sorted()
    [1, 2, 3, 4]
    >>> my_list
    [1, 4, 3, 2]

::
When an empty list is passed to the print_sorted method
    >>> my_list = MyList([])
    >>> my_list.print_sorted()
    []

    >>> my_list = MyList([5, -1, 3, -2])
    >>> my_list.print_sorted()
    [-2, -1, 3, 5]